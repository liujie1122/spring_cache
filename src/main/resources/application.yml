debug:
  true
spring:
  datasource:
    username: root
    password: root
    url: jdbc:mysql://192.168.1.249:8888/cache?serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
#    schema:
#      - classpath:department.sql
    type: com.alibaba.druid.pool.DruidDataSource
#   Druid数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall
#    filters:
#      commons-log.connection-logger-name: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

#redis配置
  redis:
  #Redis服务器地址
    host: 192.168.1.249
    #Redis服务器连接端口
    port: 16379
#Redis服务器连接密码（默认为空）
#    password:
#连接超时时间 毫秒（默认2000）
#请求redis服务的超时时间,这里注意设置成0时取默认时间2000
#spring.redis.timeout=2000
#连接池最大连接数（使用负值表示没有限制）
#建议为业务期望QPS/一个连接的QPS,例如50000/1000=50
#一次命令时间(borrow|return resource+Jedis执行命令+网络延迟)的平均耗时约为1ms,一个连接的QPS大约是1000
#spring.redis.pool.max-active=50
#连接池中的最大空闲连接
#建议和最大连接数一致,这样做的好处是连接数从不减少,从而避免了连接池伸缩产生的性能开销。
#spring.redis.pool.max-idle=50
#连接池中的最小空闲连接
#建议为0，在无请求的状况下从不创建链接
#spring.redis.pool.min-idle=0
#连接池最大阻塞等待时间 毫秒（-1表示没有限制）
#建议不要为-1，连接池占满后无法获取连接时将在该时间内阻塞等待，超时后将抛出异常。
#spring.redis.pool.max-wait=2000



logging:
  level.com.liujie.server.mapper: debug

#mybatis:
#  config-location: classpath:mybatis/mybatis-config.xml
#  mapper-locations: classpath:mybatis/mapper/*.xml

